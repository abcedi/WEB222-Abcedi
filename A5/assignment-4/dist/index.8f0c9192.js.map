{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["/**\r\n * WEB222 â€“ Assignment 04\r\n *\r\n * I declare that this assignment is my own work in accordance with\r\n * Seneca Academic Policy. No part of this assignment has been\r\n * copied manually or electronically from any other source\r\n * (including web sites) or distributed to other students.\r\n *\r\n * Please update the following with your information:\r\n *\r\n *      Name:       Abcedi Ilacas\r\n *      Student ID: 138180211\r\n *      Date:       19-03-2024\r\n */\r\n\r\n// All of our data is available on the global `window` object.\r\nconst { artists, songs } = window;\r\n\r\n// Dynamically create artist buttons and display default artist's songs on page load\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  const menu = document.getElementById(\"menu\");\r\n  artists.forEach(artist => {\r\n    const button = document.createElement('button');\r\n    button.textContent = artist.name;\r\n    button.dataset.artistImage = artist.imageUrl;\r\n    button.addEventListener('click', () => {\r\n      displaySongsForArtist(artist.artistId);\r\n      document.getElementById('selected-artist').textContent = `Songs by ${artist.name}`;\r\n    });\r\n    menu.appendChild(button);\r\n  });\r\n\r\n  button.onmouseover = function() {\r\n    this.style.backgroundImage = `url('${this.dataset.artistImage}')`;\r\n    this.style.backgroundSize = 'cover';\r\n    this.style.backgroundPosition = 'center';\r\n    this.style.backgroundRepeat = 'no-repeat';\r\n    this.style.opacity = '0.5';\r\n  };\r\n\r\n  button.onmouseout = function() {\r\n    this.style.backgroundImage = '';\r\n    this.style.opacity = '1';\r\n  };\r\n\r\n  // Display the first artist's songs by default, if there are any artists\r\n  if (artists.length > 0) {\r\n    displaySongsForArtist(artists[0].artistId);\r\n  }\r\n});\r\n\r\nfunction displaySongsForArtist(artistId) {\r\n  const artist = artists.find((artist) => artist.artistId === artistId);\r\n  const filteredSongs = songs.filter((song) => song.artistId === artistId);\r\n  const cardContainerRef = document.getElementById(\"card-container\");\r\n  const selectedArtistElement = document.getElementById(\"selected-artist\");\r\n\r\n  // Update the selected artist's name and social media links\r\n  selectedArtistElement.innerHTML = generateArtistHeader(artist);\r\n\r\n  // Clear previous song cards and display new ones\r\n  cardContainerRef.innerHTML = \"\";\r\n  filteredSongs.forEach((song) => {\r\n    const songCard = createSongCard(song, artist);\r\n    cardContainerRef.appendChild(songCard);\r\n  });\r\n}\r\n\r\nfunction createSongCard(song, artist) {\r\n  const card = document.createElement(\"div\");\r\n  card.className = \"song-card\";\r\n\r\n  const songImage = document.createElement(\"img\");\r\n  songImage.className = \"song-image\";\r\n  songImage.src = song.imageUrl;\r\n  songImage.alt = `Cover image for ${song.title}`;\r\n  songImage.style.cursor = 'pointer';\r\n  songImage.addEventListener('click', (event) => {\r\n    event.stopPropagation();\r\n    window.open(song.url, '_blank');\r\n  });\r\n\r\n  const songTitle = document.createElement(\"h3\");\r\n  songTitle.textContent = song.title;\r\n  if(song.explicit) {\r\n    const explicitIcon = document.createElement(\"img\");\r\n    explicitIcon.src = \"./explicit.webp\";\r\n    explicitIcon.alt = \"Explicit\";\r\n    explicitIcon.style.height = '1em';\r\n    explicitIcon.style.verticalAlign = 'text-bottom';\r\n    songTitle.appendChild(explicitIcon);\r\n  }\r\n\r\n  const songYear = document.createElement(\"p\");\r\n  songYear.textContent = `Year Released: ${song.year}`;\r\n\r\n  const songDuration = document.createElement(\"p\");\r\n  songDuration.textContent = `Duration: ${formatDuration(song.duration)}`;\r\n\r\n  // Append all the elements to the card\r\n  card.appendChild(songImage);\r\n  card.appendChild(songTitle);\r\n  card.appendChild(songYear);\r\n  card.appendChild(songDuration);\r\n\r\n  card.addEventListener('click', () => {\r\n    console.log(`You clicked on \"${song.title}\" by ${artist.name}`);\r\n  });\r\n\r\n  return card;\r\n}\r\n\r\nfunction formatDuration(duration) {\r\n  const minutes = Math.floor(duration / 60);\r\n  const seconds = duration % 60;\r\n  return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\r\n}\r\n\r\nfunction generateArtistHeader(artist) {\r\n  let linksHTML = artist.urls\r\n    .map((link) => `<a href=\"${link.url}\" target=\"_blank\">${link.name}</a>`)\r\n    .join(\", \");\r\n  return `<strong>Songs by ${artist.name}</strong> ${linksHTML}`;\r\n}\r\n"],"names":[],"version":3,"file":"index.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}